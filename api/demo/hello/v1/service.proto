syntax = "proto3";

option go_package = "github.com/aranw/grpc-gateway-openapi/api/demo/hello/v1;hellov1";

import "google/api/annotations.proto";
import "google/api/field_behavior.proto";
import "google/protobuf/timestamp.proto";
import "google/protobuf/field_mask.proto";
import "validate/validate.proto";
import "protoc-gen-openapiv2/options/annotations.proto";

package demo.hello.v1;

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
    consumes : "application/json";
        responses : {
            key: "404";
            value : {
                description: "Returned when the resource does not exist.";
            }
    }
};

service HelloService {
    // Say Hello
    // 
    // Say hello takes the given parameter and says hello.
    rpc SayHello(SayHelloRequest) returns (SayHelloResponse) {
        option (google.api.http) = {
            get: "/hello/{name}"
        };
        option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
            summary : "Say Hello"
            description : "Lets you say hello to someone"
            operation_id : "say_hello"
            tags: "Hello"
            responses : {
                key : "200";
                value: {
                  description: "Returned on success.";
                }
              }
              responses : {
                key: "404";
                value: {
                  description: "Returned when the person you want to say hello to can not be found.";
                }
              }
              responses : {
                key: "500";
                value: {
                  description: "Internal server error.";
                }
              }
        };
    }
}

message SayHelloRequest {
    string name = 1 [(validate.rules).string.uuid = true];
}

message SayHelloResponse {
    string message = 1;
}